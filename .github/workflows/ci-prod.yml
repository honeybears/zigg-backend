name: Build and Deploy to Elastic Beanstalk in Dev
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JASYPT_PASSWORD: ${{ secrets.JASYPT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: adopt

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew test -Pjasypt.encryptor.password=$JASYPT_PASSWORD


  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      rc_tag: ${{ steps.extract_tag.outputs.rc_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Tag
        id: extract_tag
        run: |
          TAG=$(git describe --tags --exact-match)
          echo "RC_TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=rc_tag::$TAG"

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: litpon92/zigg_service:${{ env.RC_TAG }}

      - name: Insert TAG to docker-compose.yml
        run: |
          sed -i "s/{TAG}/${{ env.RC_TAG }}/g" .elasticbeanstalk/docker-compose.yml

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws_secret_key: ${{ secrets.AWS_ACCESS_KEY_SECRET_PROD }}
          application_name: zigg-svc-prod
          environment_name: Zigg-svc-dev-prod
          region: ${{ secrets.AWS_REGION }}
          version_label: ${{ env.RC_TAG }}
          deployment_package: .elasticbeanstalk/docker-compose.yml
          wait_for_environment_recovery: 120

  delete-tag-on-failure:
    runs-on: ubuntu-latest
    needs: [ test, build-and-deploy ]
    if: failure()
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Delete tag if build or test fails
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RC_TAG: ${{ env.RC_TAG }}
        run: |
          echo "Deleting tag $RC_TAG due to failure"
          git tag -d "$RC_TAG"
          git push origin :refs/tags/"$RC_TAG"
